vue cli

src 폴더 안에 여러 파일들을 종합해서 최소한의 파일로 변환(묶어서) index.html에 들어가게 된다.
* 배포 단계를 이해 하려면 웹팩을 공부하는게 좋다


싱글 파일 컴포넌트(.vue 파일) 
- 파일내에서 vue + 탭을 하면 기본 템플릿이 생성된다.
- 특정 영역에 해당하는 HTML, Javascript, CSS를 한파일에 정의한다.
- template 태그 내에 최상위 div 태그는 하나만 존재해야 한다.
- 컴포넌트 간에 데이터 충돌이 일어나지 않도록 데이터는 data: function(){return{}} 형식으로 새 객체를 리턴하는 방식으로 사용한다.

.vue 파일은 두단어로 조합하는게 좋고 파스칼케이스로 짓는다. (ex. AppHeader) 
- HTML에서 기본적으로 제공되는 태그들과 헷갈릴 우려가 있기 때문에



뷰 초급 강좌총 정리

- Reactivity : VueJS가 추구하는 중심 사상이자 핵심 기능, 데이터의 변화를 Vue에서 감지해서 화면에 반영
- 인스턴스 : 뷰를 개발할 때 필수로 생성해야 하는 단위, 인스턴트 안에 속성들로 화면을 조작해 나갈 수 있다.
- 컴포넌트 : 화면의 영역을 구분해서 개발하는 방식, 프론트엔드 프레임워크에서 가장 중요한 개념, 코드의 재사용성
- 컴포넌트 통신 : 컴포넌트로 개발했을 때 데이터의 흐름을 제어하기 위한 규칙을 제한하면서, 데이터의 흐름을 예측할 수 있다.
   > props : 상위에서 하위로 데이터를 내려주는 것
   > event emit : 하위에서 상위로 이벤트를 전달하는 것
- HTTP 통신 라이브러리 (axios가 가장 많이 사용된다.)
- 템플릿 문법 : 화면을 조작하기 위한 뷰의 문법
   > 데이터 바인딩 ( 실제 데이터를 화면에 엮어내는 과정, Reactivity )
   > 뷰 디렉티브 ( v- 로 시작하는 html 속성으로 되어있다. 여러 기능들을 가지고 있다.)
- Vue CLI : 프로젝트 생성을 할 때 명령어를 이용해서 생성하는 방식
- 싱글 파일 컴포넌트 : Vue CLI안에서 제공되는 .vue파일
